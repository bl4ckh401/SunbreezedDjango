{"ast":null,"code":"var _jsxFileName = \"/home/pavoo/Documents/sunbreezedjango/sunbreeze/sunbreezefront/src/Components/CSRFToken.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CSRFToken() {\n  _s();\n\n  const [csrf, setcsrf] = useState('');\n\n  function getCookie(name) {\n    let cookieValue = null;\n\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      fetch(\"http://127.0.0.1:8000/api/getcsrf\");\n    };\n\n    fetchData();\n    setcsrf(getCookie('csrftoken'));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"csrfmiddlewaretoken\",\n      value: csrf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CSRFToken, \"EPDDLM/zTahLeL5sP8Lw+MhwwS8=\");\n\n_c = CSRFToken;\nexport default CSRFToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSRFToken\");","map":{"version":3,"sources":["/home/pavoo/Documents/sunbreezedjango/sunbreeze/sunbreezefront/src/Components/CSRFToken.js"],"names":["React","useState","useEffect","CSRFToken","csrf","setcsrf","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fetchData","fetch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASK,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC3C,YAAMC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,cAAMH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAf,CADqC,CAErC;;AACA,YAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAA0CP,IAAI,GAAG,GAArD,EAA2D;AACvDC,UAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACH;AACJ;AACJ;;AACD,WAAON,WAAP;AACH;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,SAAS,GAAG,YAAY;AAC1BC,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACH,KAFD;;AAGAD,IAAAA,SAAS;AACTb,IAAAA,OAAO,CAACC,SAAS,CAAC,WAAD,CAAV,CAAP;AACH,GANQ,EAMN,EANM,CAAT;AAOA,sBACI;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,qBAA1B;AAAgD,MAAA,KAAK,EAAEF;AAAvD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhCQD,S;;KAAAA,S;AAkCT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction CSRFToken() {\n\n    const [csrf, setcsrf] = useState('')\n\n    function getCookie(name) {\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            fetch(\"http://127.0.0.1:8000/api/getcsrf\")\n        }\n        fetchData()\n        setcsrf(getCookie('csrftoken'))\n    }, [])\n    return (\n        <div>\n            <input type='hidden' name='csrfmiddlewaretoken' value={csrf}></input>\n        </div>\n    )\n}\n\nexport default CSRFToken"]},"metadata":{},"sourceType":"module"}